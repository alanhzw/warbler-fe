
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    gzip_static on;
 					#选择支持vary header；改选项可以让前端的缓存服务器缓存经过gzip压缩的页面; 这个可以不写，表示在传送数据时，给客户端说明我使用了gzip压缩
    include       mime.types;
    default_type  application/octet-stream;
    client_max_body_size 10m;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  www.warblerfe.top; # 修改为docker服务宿主机的ip


        location / {
            root   /usr/share/nginx/html;
            index  index.html;
            try_files $uri $uri/ /index.html;
         }
	    location @router {
           rewrite ^.*$ /index.html last;
        }
        error_page   500 502 503 504  /50x.html;
            location = /50x.html {
            root   html;
     }
    }


    # HTTPS server
    #
  server {
        listen       443 ssl;
        server_name  www.warblerfe.top;

        ssl_certificate      /etc/nginx/ssl/warblerfe.top_bundle.crt;
        ssl_certificate_key  /etc/nginx/ssl/warblerfe.top.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            root   /usr/share/nginx/html;
            index  index.html;
            try_files $uri $uri/ /index.html;
        }

        location @router {
            rewrite ^.*$ /index.html last;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    # server {
    #    listen       80;
    #    server_name  js.warblerfe.top;
    #    try_files $uri $uri/ /index.html;

    #    location / {
    #        root   /usr/share/nginx/js;
    #        index  index.html index.htm;
    #    }
    # }

    # server {
    #    listen       80;
    #    server_name  cli.warblerfe.top;
    #    try_files $uri $uri/ /index.html;

    #    location / {
    #        root   /usr/share/nginx/cli;
    #        index  index.html index.htm;
    #    }
    # }



}


